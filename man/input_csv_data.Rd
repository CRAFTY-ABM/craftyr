% Generated by roxygen2 (4.0.2): do not edit by hand
\name{input_csv_data}
\alias{input_csv_data}
\title{Reads output data from CSV files}
\usage{
input_csv_data(simp, datatype = NULL, dataname = "Cell", columns = NULL,
  pertick = FALSE, extension = "csv", starttick = if
  (!is.null(simp$sim$starttick)) simp$sim$starttick else simp$tech$mintick,
  endtick = if (!is.null(simp$sim$endtick)) simp$sim$endtick else
  simp$tech$maxtick, tickinterval = simp$csv$tickinterval_agg,
  attachfileinfo = TRUE, splitfileinfo = FALSE, bindrows = FALSE,
  aggregationFunction = NULL, skipXY = FALSE)
}
\arguments{
\item{simp}{SIMulation Properties}

\item{datatype}{datatype (e.g. "Capital")}

\item{dataname}{dataname (e.g. "Cap1")}

\item{columns}{Vector of colum names. If given restricts returned colums to the given headers
(plus X and Y coordinates, and - if (attachfileinfo == TRUE) - Tick, RunId, Scenario, and Region)}

\item{pertick}{If TRUE the filename will be complemented by all available ticks}

\item{extension}{file extension of those files to read}

\item{starttick}{first tick to consider (only required when \code{pertick == TRUE})}

\item{endtick}{last tick to consider (only required when \code{pertick == TRUE})}

\item{tickinterval}{Note: tickinterval is based on starttick which defaults to 0! Only required when \code{pertick == TRUE}.}

\item{attachfileinfo}{If TRUE, further information about the file is attached to the returned list}

\item{splitfileinfo}{If TRUE, use split upon fileinfo data (not tested)}

\item{bindrows,}{If TRUE, rbind all data into one data.frame}

\item{aggregationFunction}{function applied to aggregate data}

\item{do}{not return X and Y columns}
}
\value{
List (unless bindrows == TRUE) of data.frames (one list item per data folder) containing requested data
}
\description{
Reads output data for the specified datatype and dataname from CSV data for potentially multiple runs,
regions, and multiple ticks.
}
\author{
Sascha Holzhauer debug
}
\seealso{
input_tools_getModelOutputFilenames
}

